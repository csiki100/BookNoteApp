// <auto-generated />
using System;
using BookReview.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookReview.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("BookReview.API.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BookReview.API.Models.Chapter", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("BookId");

                    b.Property<int>("ChapterNum");

                    b.Property<string>("Content");

                    b.HasKey("Id", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("Chapters");
                });

            modelBuilder.Entity("BookReview.API.Models.Picture", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("BookId");

                    b.Property<string>("PublicId");

                    b.Property<string>("Url");

                    b.HasKey("Id", "BookId");

                    b.HasIndex("BookId")
                        .IsUnique();

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("BookReview.API.Models.Reads", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("BookId");

                    b.HasKey("UserId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("Reads");
                });

            modelBuilder.Entity("BookReview.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BookReview.API.Models.Chapter", b =>
                {
                    b.HasOne("BookReview.API.Models.Book", "Book")
                        .WithMany("Chapters")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BookReview.API.Models.Picture", b =>
                {
                    b.HasOne("BookReview.API.Models.Book", "Book")
                        .WithOne("Picture")
                        .HasForeignKey("BookReview.API.Models.Picture", "BookId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BookReview.API.Models.Reads", b =>
                {
                    b.HasOne("BookReview.API.Models.Book", "Book")
                        .WithMany("UsersWhoRead")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BookReview.API.Models.User", "User")
                        .WithMany("Books")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
